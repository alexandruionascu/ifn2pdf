"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DesignerProps = exports.PreviewProps = exports.UIProps = exports.UIOptions = exports.GenerateProps = exports.GeneratorOptions = exports.Inputs = exports.Template = exports.BasePdf = exports.Font = exports.SchemaForUI = exports.Schema = exports.Size = exports.Lang = void 0;
const zod_1 = require("zod");
const langs = ['en', 'ja', 'ar', 'th', 'pl', 'it'];
exports.Lang = zod_1.z.enum(langs);
exports.Size = zod_1.z.object({ height: zod_1.z.number(), width: zod_1.z.number() });
exports.Schema = zod_1.z
    .object({
    type: zod_1.z.string(),
    position: zod_1.z.object({ x: zod_1.z.number(), y: zod_1.z.number() }),
    width: zod_1.z.number(),
    height: zod_1.z.number(),
    rotate: zod_1.z.number().optional(),
})
    .passthrough();
const SchemaForUIAdditionalInfo = zod_1.z.object({
    id: zod_1.z.string(),
    key: zod_1.z.string(),
    data: zod_1.z.string(),
});
exports.SchemaForUI = exports.Schema.merge(SchemaForUIAdditionalInfo);
const ArrayBufferSchema = zod_1.z.any().refine((v) => v instanceof ArrayBuffer);
const Uint8ArraySchema = zod_1.z.any().refine((v) => v instanceof Uint8Array);
exports.Font = zod_1.z.record(zod_1.z.object({
    data: zod_1.z.union([zod_1.z.string(), ArrayBufferSchema, Uint8ArraySchema]),
    fallback: zod_1.z.boolean().optional(),
    subset: zod_1.z.boolean().optional(),
}));
exports.BasePdf = zod_1.z.union([zod_1.z.string(), ArrayBufferSchema, Uint8ArraySchema]);
exports.Template = zod_1.z.object({
    schemas: zod_1.z.array(zod_1.z.record(exports.Schema)),
    basePdf: exports.BasePdf,
    sampledata: zod_1.z.array(zod_1.z.record(zod_1.z.string())).length(1).optional(),
    columns: zod_1.z.array(zod_1.z.string()).optional(),
});
exports.Inputs = zod_1.z.array(zod_1.z.record(zod_1.z.string())).min(1);
const CommonOptions = zod_1.z.object({ font: exports.Font.optional() }).passthrough();
const CommonProps = zod_1.z.object({
    template: exports.Template,
    options: CommonOptions.optional(),
    plugins: zod_1.z.record(zod_1.z.object({ ui: zod_1.z.any(), pdf: zod_1.z.any(), propPanel: zod_1.z.any() })).optional(),
});
// -------------------generate-------------------
exports.GeneratorOptions = CommonOptions.extend({});
exports.GenerateProps = CommonProps.extend({
    inputs: exports.Inputs,
    options: exports.GeneratorOptions.optional(),
}).strict();
// ---------------------ui------------------------
exports.UIOptions = CommonOptions.extend({ lang: exports.Lang.optional() });
const HTMLElementSchema = zod_1.z.any().refine((v) => v instanceof HTMLElement);
exports.UIProps = CommonProps.extend({
    domContainer: HTMLElementSchema,
    options: exports.UIOptions.optional(),
});
exports.PreviewProps = exports.UIProps.extend({ inputs: exports.Inputs }).strict();
exports.DesignerProps = exports.UIProps.extend({}).strict();
//# sourceMappingURL=schema.js.map