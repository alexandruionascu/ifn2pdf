import "antd/es/button/style";
import _Button from "antd/es/button";
import "antd/es/space/style";
import _Space from "antd/es/space";
import "antd/es/drawer/style";
import _Drawer from "antd/es/drawer";
import "antd/es/config-provider/style";
import _ConfigProvider from "antd/es/config-provider";
import React, { useContext } from 'react';
import FRender, { useForm } from '../../index';
import { translation } from '../utils';
var DrawerForm = function DrawerForm(props) {
  var schema = props.schema,
    widgets = props.widgets,
    onClose = props.onClose,
    data = props.data,
    configContext = props.configContext;
  var form = useForm();
  var configCtx = useContext(_ConfigProvider.ConfigContext);
  var t = translation(configCtx);
  var handleFinish = function handleFinish(data) {
    onClose(data);
  };
  var handleClose = function handleClose() {
    onClose();
  };
  var drawerProps = {
    visible: true
  };
  return /*#__PURE__*/React.createElement(_Drawer, Object.assign({}, drawerProps, {
    width: 600,
    title: t('operate'),
    open: true,
    onClose: handleClose,
    extra: /*#__PURE__*/React.createElement(_Space, null, /*#__PURE__*/React.createElement(_Button, {
      onClick: handleClose
    }, t('cancel')), /*#__PURE__*/React.createElement(_Button, {
      type: "primary",
      onClick: form.submit
    }, t('confirm')))
  }), /*#__PURE__*/React.createElement(FRender, {
    schema: schema.items,
    initialValues: data,
    form: form,
    labelCol: {
      span: 8
    },
    widgets: widgets,
    onFinish: handleFinish,
    locale: configContext === null || configContext === void 0 ? void 0 : configContext.locale,
    maxWidth: 'auto'
  }));
};
export default DrawerForm;